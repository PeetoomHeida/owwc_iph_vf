View(hap01)
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F,data.table = F)
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F,data.table = T)
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
View(hap01)
View(hap01)
geno = t( as.matrix( hap01[, 16:ncol(hap01)] ) ) # only genotypes
#################
## tauschii only
#################
geno = geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
geno[1:5,1:5]
# compute A mat
A = A.mat(geno, impute.method="mean", return.imputed = T)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
View(geno)
rownames(geno)=c(pop$line)
View(geno)
geno = geno[rownames(geno) %in% tauschii.lines, ]
View(geno)
geno[1:15,1:5]
# compute A mat
A = A.mat(geno, impute.method="mean", return.imputed = T)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
geno[1:15,1:5]
# compute A mat
A = A.mat(geno, impute.method="mean", return.imputed = T)
setwd("~/Documents/PhD_KSU/PhD_Documments/POLAND_LAB/LAB_Papers/Kumar et al, 2020")
lininfo = read.table(file="data/pop.tauschii.txt", header=T,check.names=F)
# read hap01 file
hap01 <- fread("data/3.chrom6DS_2.3-2.6Mb/cds/selected.aetau.wcm.6D.Cmcinterval.hmp.filt.MSTmap.num.txt", header = T, check.names = F, data.table = F)
colnames(hap01)
geno = t(as.matrix(hap01[,16:ncol(hap01)])) # only genotypes
geno[1:15,1:5]
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
setwd("~/Documents/PhD_KSU/PhD_Documments/POLAND_LAB/LAB_Papers/Kumar et al, 2020/repository")
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
rownames(geno)=c(pop$line)
#################
## tauschii only
#################
geno = geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
####################
## CLUSTER ANALYSIS
####################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
## Calculate euclidean distances
dd <- dist(scale(hc2), method = "euclidean")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
View(hc2)
A=as.matrix(read.delim('gdist.cds.txt', header = T, check.names = F))
A=as.matrix(read.delim('gdist.txt', header = T, check.names = F))
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
rownames(geno)=c(pop$line)
#################
## tauschii only
#################
geno = geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
####################
## CLUSTER ANALYSIS
####################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,4] <- as.numeric(edgecols[,4])
# coloring diff lineages with different colors
edgecols[,3][edgecols[,4] == 0] = "grey70"
edgecols[,3][edgecols[,4] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,5] <- as.numeric(tipcols[,5])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,5] == 0] = "blue"
tipcols[,3][tipcols[,5] == 1] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
View(edgecols)
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
View(edgecols)
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
View(edgecols)
edgecols[,4] <- as.numeric(edgecols[,4])
View(edgecols)
# coloring diff lineages with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
View(edgecols)
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring diff lineages with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
View(edgecols)
View(edgecols)
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,6] <- as.numeric(tipcols[,6])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,6] == 0] = "blue"
tipcols[,3][tipcols[,6] == 1] = "red"
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
tipcols[,5] <- as.numeric(tipcols[,5])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,6] == 0] = "blue"
tipcols[,3][tipcols[,6] == 1] = "red"
View(edgecols)
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,5] <- as.numeric(tipcols[,5])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,5] == 0] = "blue"
tipcols[,3][tipcols[,5] == 1] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
View(tipcols)
tipcols[,5] <- as.numeric(tipcols[,5])
View(tipcols)
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
View(tipcols)
View(tipcols)
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
rownames(geno)=c(pop$line)
#################
## tauschii only
#################
geno = geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
####################
## CLUSTER ANALYSIS
####################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
par(mar=c(1,1,1,1))
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap01 file
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno = t(as.matrix(hap01[, 16:ncol(hap01)] ) ) # only genotypes
rownames(geno)=c(pop$line)
#################
## Ae. tauschii only
#################
geno <- geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
####################
## CLUSTER ANALYSIS
####################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat,method = 'single'))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
# plotting tree
pdf("Fig.wcm_chr6D_cluster.pdf", width = 10, height = 10)
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
dev.off()
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
legend(-0.5, 80, lty=1, lwd=2, cex=0.75,
legend = c('Lineage 1 (L1)', 'Lineage 2 (L2)', 'WCM Resistant', 'WCM Susceptible'),
text.col = 'black', col = c("blue", "red", "purple", "grey70"))
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap file numeric
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno <- t(as.matrix(hap01[, 16:ncol(hap01)])) # only genotypes
######################
## Ae. tauschii only
######################
geno <- geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
###################################
## Hierarchical Cluster Analysis
###################################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
View(edgecols)
edgecols[,4] <- as.numeric(edgecols[,4])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,4] == 'S'] = "grey70"
edgecols[,3][edgecols[,4] == 'R'] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,6] <- as.numeric(tipcols[,6])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,6] == 1] = "blue"
tipcols[,3][tipcols[,6] == 2] = "red"
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
# load required libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load('data.table','ape','phyclust','rrBLUP','ggplot2',
'ggtree','tidytree')
# read the pheno file
pop <-read.table(file="data/selected_lines_interval.txt", header = T, as.is = T, check.names = F)
# samples info
wheat.lines <- pop$line[pop$specie == 'wheat']
tauschii.lines <- pop$line[pop$specie == 'tauschii']
# read hap file numeric
hap01 <- fread("data/hmp_selected_lines.txt", header = T, check.names = F, data.table = F)
geno <- t(as.matrix(hap01[, 16:ncol(hap01)])) # only genotypes
######################
## Ae. tauschii only
######################
geno <- geno[rownames(geno) %in% tauschii.lines, ]
geno[1:15,1:5]
###################################
## Hierarchical Cluster Analysis
###################################
# compute genetic distance
ifelse(test = file.exists('data/distMat.RData'),
yes = load('data/distMat.RData'), no = distMat <- dist(geno))
# saving distance matrix because it's a computationally intensive step
if (!file.exists('data/distMat.RData')) save(distMat, file = "data/distMat.RData")
# cluster accessions and convert to phylo object for ape
hc2 <- as.phylo(hclust(distMat))
# cluster coloring
edgecols <- cbind('line'=NA, 1:nrow(hc2$edge), color='black') # create data frame
edgecols[,1] <- hc2$tip.label[hc2$edge[,2]] # get labels
edgecols <- as.matrix(merge(edgecols, pop, by = 'line', all.x = T)) # get samples info
edgecols <- edgecols[order(as.numeric(edgecols[,2])), ] # get samples in original order
edgecols[,5] <- as.numeric(edgecols[,5])
# coloring R/S accessions with different colors
edgecols[,3][edgecols[,5] == 0] = "grey70"
edgecols[,3][edgecols[,5] == 1] = "purple"
# tips coloring
tipcols <- as.matrix(merge(hc2$tip.label, edgecols, by = 1, sort = F))
tipcols[,7] <- as.numeric(tipcols[,7])
# coloring diff lineages with different colors
tipcols[,3][tipcols[,7] == 1] = "blue"
tipcols[,3][tipcols[,7] == 2] = "red"
plotnj(unrooted.tree=hc2, type='p',
show.tip.label=T, lab4ut="axial", label.offset=0.2, cex=0.4,
edge.color=edgecols[,3], edge.width=1, tip.color=tipcols[,3], rotate.tree=-20)
myY = read.delim('data/wcm_pheno')
myY = read.delim('data/wcm_pheno.txt')
# load required libraries
# source("http://www.bioconductor.org/biocLite.R")
# BiocManager::install('multtest')
# install.packages("gplots")
# BiocManager::install('snpStats')
# install.packages("LDheatmap")
# install.packages("genetics")
# install.packages("ape")
# install.packages("EMMREML")
# install.packages("scatterplot3d")
library(data.table)
library(multtest)
library(gplots)
library(LDheatmap)
library(genetics)
library(ape)
library(EMMREML)
library(compiler) #this library is already installed in R
library("scatterplot3d")
# source("http://zzlab.net/GAPIT/gapit_functions.txt")
source('~/scripts/R/functions/GWAS/gapit_functions.txt'); #keep a local copy
# source("http://zzlab.net/GAPIT/emma.txt")
source('~/scripts/R/functions/GWAS/emma.txt'); #keep a local copy
